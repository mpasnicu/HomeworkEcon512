%% problem 1
% just define the values

v = [2 2];
p = [1 1];

fprintf('Demand for A is %.2f and Demand for B is %.2f\n', demand(v, p), demand(fliplr(v), fliplr(p)))




%% problem 2
% keep v_a = v_b = 2

p = [1 5];
f = @(x) [x(1) - 1/( 1 - demand(v, x)); x(2) - 1/(1 - demand(fliplr(v), fliplr(x)))];


tic
p_sol = broyden(f, p);
toc



%% problem 3


pold = [1 1];
pnew = [2 3];

tol = 1e-8;
maxit = 100;

tic
for iter =1:maxit
    
    faVal = f(pnew);
    fbVal = f(fliplr(new));
    
    if abs(max(faVal,fbVal)) < tol
        break
    else
    
    g=@(pa) f(pa, pnew(2));
    fold=f(pold);
    gVal = g(pnew(1));
    paNew = pnew(1) - ( (pnew(1) - paold) / (gVal - fold) )* gVal;
    pold(1) = pnew(1);
    pnew(1) = paNew;
    
    
    g=@(pb) f2(pa, p2);
    fold=f(pbold);
    fVal = f(pb);
    pbNew = pb - ( (pb - pbold) / (fVal - fold) )* fVal;
    pbold = pb;
    pb = pbNew;
        
        
        
        
        
    end
end

